public class Player extends Character
{
    private int gold, exp, strength, vitality, luck, speech, finesse, agility;
    private int attributeCount;
    private double attackDmg, tempHealth, tempAttackDmg;
    public Player(){
        attackDmg = 25;
        this.setHealth(100);
        gold = 0;
        exp = 0;
        attributeCount = 10;
    }

    public void setAttackDmg(double a){
        attackDmg = a;
    }

    public double getAttackDmg(){
        return attackDmg;
    }
    
    public int getVitality() {
        return vitality;
    }

    public void crit() {
        tempAttackDmg = this.getAttackDmg();
        this.setAttackDmg(this.getAttackDmg() *  1.25);
    }

    public void unCrit() {
        this.setAttackDmg(tempAttackDmg);
    }

    public void attack(Enemy y){
        this.setHealth(this.getHealth() - y.getAttackDmg());
        y.setHealth(y.getHealth() - this.getAttackDmg());
    }

    public void attackSequence(Enemy y) {
        while(this.getHealth() > 0 && y.getHealth() > 0) {
            double temp = Math.random()*30;
            if (temp <= agility) {
                this.invulnerable();
                this.attack(y);
                this.vulnerable();
            }
            
            else if (temp <= finesse) {
                this.crit();
                this.attack(y);
                this.unCrit();
            }
            else {
                this.attack(y);
            }
        }
    }

    public void invulnerable(){
        tempHealth = this.getHealth();
        this.setHealth(10000);
    }

    public void vulnerable(){
        this.setHealth(tempHealth);
    }

    public void setExp(int e){
        exp = e;
        if (exp <= 100) {
            exp = exp - 100;
            attributeCount++;
        }
    }

    public int getExp(){
        return exp;
    }

    public void setAttributeCount(int f) {
        attributeCount = f;
    }

    public int getAttributeCount(){
        return attributeCount;
    }
    
    public int getLuck() {
        return luck;
    }

    public void setGold(int g){
        gold = g;
    }

    public int getGold(){
        return gold;
    }

    public void getAttributes(){
        System.out.println("Strength: " + strength);
        System.out.println("Vitality: " + vitality);
        System.out.println("Luck:     " + luck);
        System.out.println("Speech:   " + speech);
        System.out.println("Finesse:  " + finesse);
        System.out.println("Agility:  " + agility);
    }

    public void increaseStrength(){
        attributeCount--;
        strength++;
        attackDmg *= 1.2;
    }

    public void increaseVitality(){
        attributeCount--;
        vitality++;
        this.setHealth(this.getHealth() + 10);
    }

    public void increaseLuck(){
        attributeCount--;
        luck++;
    }

    public void increaseSpeech(){
        attributeCount--;
        speech++;
    }

    public void increaseFinesse(){
        attributeCount--;
        finesse++;
    }

    public void increaseAgility(){
        attributeCount--;
        agility++;
    }
}
