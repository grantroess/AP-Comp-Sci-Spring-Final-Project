import java.util.*;

public class Game {
    Scanner reader = new Scanner(System.in);

    Player player = new Player();
    Store store = new Store();
    Dungeon dungeon = new Dungeon();

    public void intro() {    
        System.out.println("You wake up dazed and confused inside of a dark and musty cave");
        System.out.print("what is your name?   ");
        player.setName(reader.next());
        System.out.println(player.getName() + "? That's a nice name.");
        System.out.println("You will now choose your attributes, you have 10 skill points available.");
        System.out.println("Press the corresponding numerical value for the attribute that you would like to apply a skill point to.");
        System.out.println("(1) - Strength \n(2) - Vitality \n(3) - Luck \n(4) - Speech \n(5) - Finesse \n(6) - Agility ");
        while(player.getAttributeCount() > 0) {
            String pick = reader.next();
            if(pick.equals("1")) {
                player.increaseStrength();
            } else if(pick.equals("2")) {
                player.increaseVitality();
            } else if(pick.equals("3")) {
                player.increaseLuck();
            } else if(pick.equals("4")) {
                player.increaseSpeech();
            } else if(pick.equals("5")) {
                player.increaseFinesse();
            } else if(pick.equals("6")) {
                player.increaseAgility();
            } else {
                tony();
            }
            player.getAttributes();
            System.out.println("You have " + player.getAttributeCount() + " attribute points left to distribute.");

        }
        System.out.println("Feeling fresh and ready for a new day you carefully make your way out of the cave.");
        System.out.println("After leaving the cave you find yourself in a mysterious forest, you follow a dirt path until you see in the distance a proper gravel road.");
        System.out.println("You follow the path until you see ahead of you a small village with a few houses, general store and most importantly, a pub.");
        System.out.println("You walk into the pub and order a drink.");
        System.out.println("As you anjoy your drink, a large man enters the pub, wailing at the top of his lungs.");
        System.out.println("He screams out, \"Somebody help! My son! My son has been taken by savages!\"");
        System.out.println("You approach the man and ask, \"I am " + player.getName() + ". Where was your son taken?\"");
        System.out.println("\"The old King's abandoned dungeon, just outside the village. Please help him!");
        System.out.println("You pat the man's shoulder and say \"Worry not friend, I will return your son to you.\"");
        System.out.println("Before the man can say anything, you gulp down the last of your drink and head outside, determined to rescue the poor child.");

    }

    public void mainChoices() {
        System.out.println("You are in the courtyard, where would you like to go? \n(1) - Dungeon \n(2) - Store");
        String tempM = reader.next();
        if (tempM.equals("1")) {
            System.out.println("You are in the dungeon, would you like to fight or leave? \n(1) - Fight \n(2) - Leave");
            System.out.println("You have " + player.getHealth() + " health points.");
            this.dungeonChoices();
        }
        else if (tempM.equals("2")) {
            System.out.println("Welcome to the general store! What can I get for you today?");
            System.out.println("(1) - Buy \n(2) - Heal \n(3) - Leave");
            this.storeChoices();
        }
        else if (tempM.equals("quit")) {
            return;
        }
        else {
            tony();
            this.mainChoices();
        }
    }

    public void dungeonChoices(){
        String tempD = reader.next();
        if(tempD.equals("1")) {
            player.attackSequence(dungeon.getEnemy());
            if(dungeon.getEnemy().getHealth() <= 0) {
                if (player.getHealth() > 0) {
                    player.setGold(player.getGold() + dungeon.drop1() + player.getLuck());
                    player.setExp(player.getExp() + dungeon.drop2() + player.getLuck());
                    dungeon.killCurrentEnemy();
                    System.out.println("You won! Having defeated your opponent you leave the dungeon in order to regain your senses.");
                    System.out.println("You now have " + player.getGold() + " gold.");
                    System.out.println("You now have " + player.getHealth() + " health points.");
                    dungeon.setKillCount(dungeon.getKillCount() + 1);
                    if (dungeon.getKillCount() >= 20) {
                        this.endGame();
                    }
                    else {
                        this.mainChoices();
                    }
                }
                else {
                    dead();
                }
            }
            else if (player.getHealth() <= 0) {
                dead();
            }
        }
        else if (tempD.equals("2")) {
            System.out.println("Leaving the dungeon.");
            this.mainChoices();
        }
        else {
            tony();
            this.dungeonChoices();
        }
    }

    public void storeChoices(){
        String tempS = reader.next();
        if (tempS.equals("1")) {
            System.out.println("What catches your eye?");
            System.out.println("You have " + player.getGold() + " gold.");
            store.displayInventory();
            store.buy(reader.nextInt(),player);
            this.mainChoices();
        }
        else if (tempS.equals("2")) {
            if(player.getGold() >= 10) {
                store.heal(player);
            } 
            else {
                System.out.println("Without enough money to heal, you run out of the store.");
            }
            this.mainChoices();
        }
        else if (tempS.equals("3")) {
            System.out.println("Leaving the store.");
            this.mainChoices();
        }
        else {
            tony();
            this.storeChoices();
        }
    }

    public void endGame() {
        System.out.println("You have completed your quest!");
        System.out.println("Name: " + player.getName());
        System.out.println("Stats: ");
        player.getAttributes();
    }

    public void tony() {
        System.out.println("Please enter a valid input.");
    }

    public void dead() {
        System.out.println("You died! Maybe next time you shouldn't do that...");
    }
}
